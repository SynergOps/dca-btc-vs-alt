//@version=6
strategy("DCA performance by Cerebrux", overlay=true, pyramiding = 10000, default_qty_type=strategy.percent_of_equity, default_qty_value=100, calc_on_every_tick=true, process_orders_on_close=true)

// === Ρυθμίσεις Χρήστη ===
investmentAmount = input.float(100, "Ποσό Επένδυσης (€)", minval=1)
dcaInterval = input.string("Μηνιαία", "Συχνότητα Επένδυσης", options=["Ημερήσια", "Εβδομαδιαία", "Μηνιαία"])
startDate = input.time(timestamp("2020-04-01 00:00 +0000"), "Ημερομηνία Έναρξης")
endDate = input.time(timestamp("2999-04-01 00:00 +0000"), "Ημερομηνία Λήξης")
tradingFeePercent = input.float(0.1, "Ποσοστό Τέλους Συναλλαγών (%)", minval=0, tooltip="Εισάγετε το ποσοστό τέλους συναλλαγών, π.χ. 0.1 για το Binance Maker Fee")

// === Investment Logic ===
var float totalInvested = 0
var float totalUnits = 0    
var float maxEquity = 0
var float maxDrawdown = 0
var float drawdownStartPrice = na
var float[] dailyReturns = array.new_float()
var float initialPrice = na
//var float buyAndHoldUnits = 0
//var float buyAndHoldFees = 0
var float totalInvestmentAmount = 0
var float totalFeesPaid = 0
// Calculate total investment periods and amount
var int totalPeriods = 0
// === Performance Metrics ===
var float[] monthlyReturns = array.new_float()
var float previousMonthClose = na
// Detect start of a new month
isNewMonth = month != month[1]

// Store previous month's close
if isNewMonth
    if not na(previousMonthClose) and not na(close)
        monthlyReturn = (close - previousMonthClose) / previousMonthClose
        array.push(monthlyReturns, monthlyReturn)
    previousMonthClose := close

// Monthly risk-free rate (~2% annual e.g. Gov Bonds)
monthlyRiskFreeRate = 0.02 / 12

isInvestmentTime = switch dcaInterval
    "Ημερήσια" => dayofmonth != dayofmonth[1]
    "Εβδομαδιαία" => dayofweek == dayofweek.monday and dayofweek != dayofweek[1]
    "Μηνιαία" => month != month[1]
    => false

if time >= startDate and time <= endDate
    // For daily, each period is 1 day (86400000 milliseconds)
    if dcaInterval == "Ημερήσια"
        totalPeriods := math.floor((endDate - startDate) / (24 * 60 * 60 * 1000))
    // For weekly, each period is 7 days (604800000 milliseconds)
    else if dcaInterval == "Εβδομαδιαία"
        totalPeriods := math.floor((endDate - startDate) / (7 * 24 * 60 * 60 * 1000))
    // For monthly, each period is 30 days (2592000000 milliseconds)
    else if dcaInterval == "Μηνιαία"
        totalPeriods := math.floor((endDate - startDate) / (30 * 24 * 60 * 60 * 1000))

canInvest = time >= startDate and time <= endDate and isInvestmentTime

if canInvest
    if isInvestmentTime
        totalInvested += investmentAmount
        fee = investmentAmount * (tradingFeePercent / 100)
        totalFeesPaid += fee
        netInvestment = investmentAmount - fee
        unitsBought = netInvestment / close
        totalUnits += unitsBought
        totalInvestmentAmount += investmentAmount
        totalPeriods += 1
        // Simulate a symbolic strategy entry so Strategy Tester shows trades
        strategy.entry("DCA Buy", strategy.long, qty=investmentAmount / close)
        if na(initialPrice)
            initialPrice := close
    else 
        if time == endDate
            strategy.close_all()
totalInvestmentAmount := investmentAmount * totalPeriods

// === Calculations ===
currentValue = totalUnits * close
profit = currentValue - totalInvested
roi = totalInvested > 0 ? (profit / totalInvested) * 100 : na

// Calculate drawdown
drawdown = maxEquity > 0 ? (currentValue - maxEquity) / maxEquity * 100 : 0
if currentValue > maxEquity
    maxEquity := currentValue
else if drawdown < maxDrawdown
    maxDrawdown := drawdown
    drawdownStartPrice := close
    //label.new(bar_index, high, "Μέγιστη Πτώση ⚑", style=label.style_label_down, color=color.red, textcolor=color.white, size=size.tiny)

// === Εμφάνιση μόνο του τελευταίου μέγιστου Drawdown ===
var label lastMaxDrawdownLabel = na  // Αποθηκεύει την τελευταία ετικέτα

if ta.change(maxDrawdown) != 0
    // Διαγραφή της προηγούμενης ετικέτας αν υπάρχει
    if not na(lastMaxDrawdownLabel)
        label.delete(lastMaxDrawdownLabel)
    // Δημιουργία νέας ετικέτας για το τελευταίο μέγιστο Drawdown
    lastMaxDrawdownLabel := label.new(bar_index, low, "Μέγιστη Πτώση: " + str.tostring(maxDrawdown, "#.##") + "%", style=label.style_label_up, color=color.red, textcolor=color.white, size=size.normal)

// Calculate average cost basis
avgCostBasis = totalUnits > 0 ? totalInvested / totalUnits : na
plot(avgCostBasis, "Μέσο Κόστος Κτήσης", color=color.purple, style=plot.style_circles, linewidth=2)

// Ο Δείκτης Sharpe είναι ένα μέτρο απόδοσης προσαρμοσμένο στον κίνδυνο. Ποσοτικοποιεί πόση απόδοση παρέχει μια επένδυση σε σχέση με τον κίνδυνο που αναλαμβάνει.
// Όταν χρησιμοποιείτε τη στρατηγική Dollar Cost Averaging (DCA), ο Δείκτης Sharpe μπορεί να βοηθήσει στην αξιολόγηση της αποτελεσματικότητας αυτής της στρατηγικής επένδυσης. Πώς:
// Σύγκριση Απόδοσης DCA: Ο Δείκτης Sharpe σας επιτρέπει να συγκρίνετε τις αποδόσεις προσαρμοσμένες στον κίνδυνο μιας στρατηγικής DCA με άλλες επενδυτικές προσεγγίσεις, όπως η επένδυση εφάπαξ.
// Αξιολόγηση Μείωσης Κινδύνου: Το DCA στοχεύει στη μείωση του κινδύνου εξομαλύνοντας την τιμή αγοράς ενός περιουσιακού στοιχείου με την πάροδο του χρόνου. Ο Δείκτης Sharpe μπορεί να βοηθήσει να ποσοτικοποιηθεί εάν το DCA βελτιώνει αποτελεσματικά το προφίλ απόδοσης προσαρμοσμένο στον κίνδυνο.
// Βελτιστοποίηση Στρατηγικής DCA: Μπορείτε να χρησιμοποιήσετε τον Δείκτη Sharpe για να αναλύσετε διαφορετικές στρατηγικές DCA, όπως η μεταβολή της συχνότητας επενδύσεων (π.χ. εβδομαδιαία έναντι μηνιαίας), για να δείτε ποια προσέγγιση παρέχει την καλύτερη απόδοση προσαρμοσμένη στον κίνδυνο.

// Τι θεωρείται καλός Δείκτης Sharpe για μια Μηνιαία Στρατηγική DCA;
// Η ερμηνεία ενός "καλού" Δείκτη Sharpe μπορεί να διαφέρει ανάλογα με την επένδυση και τις συνθήκες της αγοράς. Ωστόσο, εδώ είναι μερικές γενικές κατευθυντήριες γραμμές:
// Κάτω από 1: Υποδεικνύει ότι η απόδοση της επένδυσης δεν αντισταθμίζει επαρκώς τον κίνδυνο. Όσο χαμηλότερος ο Δείκτης Sharpe, τόσο λιγότερο ελκυστική είναι η απόδοση προσαρμοσμένη στον κίνδυνο.
// 1 ή Υψηλότερος: Ένας Δείκτης Sharpe 1 ή μεγαλύτερος θεωρείται γενικά αποδεκτός. Υποδηλώνει ότι η απόδοση της επένδυσης αντισταθμίζει επαρκώς τον κίνδυνο που αναλαμβάνεται.
// 2 ή Υψηλότερος: Ένας Δείκτης Sharpe 2 ή μεγαλύτερος θεωρείται καλός.
// 3 ή Υψηλότερος: Ένας Δείκτης Sharpe 3 ή μεγαλύτερος θεωρείται εξαιρετικός.
// Είναι σημαντικό να συγκρίνετε τον Δείκτη Sharpe της στρατηγικής DCA σας με αυτόν σχετικών δεικτών αναφοράς, όπως ένας ευρύς δείκτης αγοράς ή ένα χαρτοφυλάκιο με παρόμοια περιουσιακά στοιχεία. Λάβετε υπόψη ότι ένας καλός Δείκτης Sharpe δεν εγγυάται μελλοντική απόδοση και είναι απαραίτητο να εξετάσετε και άλλους παράγοντες πριν λάβετε επενδυτικές αποφάσεις.

var float sharpeRatio = na
var float sortinoRatio = na
if array.size(monthlyReturns) > 1
    avgMonthlyReturn = array.avg(monthlyReturns)
    var float[] downsideReturns = array.new_float()
    array.clear(downsideReturns)
    for i = 0 to array.size(monthlyReturns) - 1
        val = array.get(monthlyReturns, i)
        if val < monthlyRiskFreeRate
            array.push(downsideReturns, val)
    downsideDev = array.stdev(downsideReturns)
    sharpeRatio := ((avgMonthlyReturn - monthlyRiskFreeRate) / array.stdev(monthlyReturns)) * math.sqrt(12)
    
    // Όπως ο Δείκτης Sharpe, ο Δείκτης Sortino επικεντρώνεται μόνο στη μεταβλητότητα προς τα κάτω (δηλαδή, την επιβλαβή μεταβλητότητα). Ένας υψηλότερος Δείκτης Sortino είναι γενικά προτιμότερος.
    // Παρέχει μια πιο ξεκάθαρη εικόνα των αποδόσεων προσαρμοσμένων στον κίνδυνο, αγνοώντας τη "θετική" μεταβλητότητα (ανοδική).
    // Εστιάζοντας στην απόκλιση προς τα κάτω, ο Δείκτης Sortino παρέχει ένα πιο εκλεπτυσμένο μέτρο κινδύνου, ιδιαίτερα για επενδύσεις με ασύμμετρες κατανομές αποδόσεων.
    // Ένας Δείκτης Sortino κάτω από 1.0 θεωρείται γενικά κακός. Αυτό υποδεικνύει ότι η απόδοση της επένδυσης δεν αντισταθμίζει επαρκώς τον κίνδυνο προς τα κάτω. Με άλλα λόγια, αναλαμβάνετε περισσότερο κίνδυνο προς τα κάτω για την απόδοση που δημιουργείτε.
    // 1.5 ή Υψηλότερος: Ένας Δείκτης Sortino 1.5 ή υψηλότερος θεωρείται γενικά αποδεκτός.
    // 2 ή Υψηλότερος: Ένας Δείκτης Sortino 2 ή υψηλότερος θεωρείται καλός.
    // 2.5 ή Υψηλότερος: Ένας Δείκτης Sortino 2.5 ή υψηλότερος θεωρείται εξαιρετικός.
    sortinoRatio := downsideDev != 0 ? ((avgMonthlyReturn - monthlyRiskFreeRate) / downsideDev) * math.sqrt(12) : na

// Υπολογισμός CAGR (Σύνθετος Ετήσιος Ρυθμός Ανάπτυξης)
// Ο μέσος ετήσιος ρυθμός ανάπτυξης της επένδυσής σας, αν είχε αυξηθεί με σταθερό ρυθμό.
// Σας δείχνει πόσο γρήγορα αυξάνεται πραγματικά η επένδυσή σας με την πάροδο του χρόνου.
// Είναι εξαιρετικό για τη σύγκριση στρατηγικών σε διαφορετικές χρονικές περιόδους ή με κάτι όπως ένα αμοιβαίο κεφάλαιο δείκτη.
// Εδώ είναι μερικά γενικά σημεία αναφοράς:
// 1. Μετοχές: Ιστορικά, η μέση ετήσια απόδοση της χρηματιστηριακής αγοράς των Η.Π.Α. ήταν περίπου 10%. Επομένως, ένα CAGR σημαντικά υψηλότερο από 10% θα θεωρούνταν πολύ καλό για μια επένδυση σε μετοχές.
// 2. Ακίνητα: Μακροπρόθεσμα, η μέση ετήσια απόδοση για τα ακίνητα ήταν σε μονοψήφια ποσοστά, συνήθως κάτω από τις αποδόσεις της χρηματιστηριακής αγοράς. Ένα "καλό" CAGR θα πρέπει να συγκριθεί με τις συγκεκριμένες συνθήκες της αγοράς και τους τύπους ακινήτων.
// 3. Για μια Μηνιαία Στρατηγική DCA: Ένα καλό CAGR για μια μηνιαία στρατηγική DCA θα εξαρτηθεί από την κατηγορία περιουσιακών στοιχείων στην οποία επενδύετε. Για παράδειγμα, αν χρησιμοποιείτε το DCA για να επενδύσετε στη χρηματιστηριακή αγορά, μπορεί να στοχεύετε σε ένα CAGR στην περιοχή του 7-10% ή υψηλότερο. Αν επενδύετε σε μια πιο ασταθή κατηγορία περιουσιακών στοιχείων, όπως το Bitcoin, μπορεί να περιμένετε υψηλότερο CAGR, αλλά με μεγαλύτερο κίνδυνο.
numYears = (endDate - startDate) / (365 * 24 * 60 * 60 * 1000)
cagr = (totalInvested > 0 and numYears > 0) ? math.pow(currentValue / totalInvested, 1 / numYears) - 1 : na

// Δείκτης Calmar
// Συγκρίνει την ετησιοποιημένη απόδοση μιας επένδυσης με τη μέγιστη πτώση της.
// Ένας υψηλότερος Δείκτης Calmar υποδεικνύει καλύτερη απόδοση προσαρμοσμένη στον κίνδυνο, με έμφαση στον κίνδυνο προς τα κάτω. Δείχνει πόση απόδοση έχει δημιουργήσει μια επένδυση σε σχέση με τη μεγαλύτερη απώλειά της.
// 1 ή Υψηλότερος: Ένας Δείκτης Calmar 1 ή μεγαλύτερος θεωρείται γενικά αποδεκτός. Υποδηλώνει ότι η ετησιοποιημένη απόδοση της επένδυσης είναι ίση ή μεγαλύτερη από τη μέγιστη πτώση της.
// 2 ή Υψηλότερος: Ένας Δείκτης Calmar 2 ή μεγαλύτερος θεωρείται καλός.
// 3 ή Υψηλότερος: Ένας Δείκτης Calmar 3 ή μεγαλύτερος θεωρείται εξαιρετικός.
calmarRatio = maxDrawdown != 0 ? cagr / math.abs(maxDrawdown / 100) : na

// Predefined colors
color_white = color.new(color.white, 0)
color_navy = color.new(color.navy, 0)
color_gray = color.new(color.gray, 0)
color_dark_gray = color.new(color.gray, 90) // A darker shade of gray for comments

// === Optional Settings for Displaying Ratios ===
showSharpeRatio = input.bool(true, title="Εμφάνιση Sharpe Ratio", tooltip="Ο Δείκτης Sharpe μετρά την απόδοση προσαρμοσμένη στον κίνδυνο της στρατηγικής. Ένας δείκτης >1.0 υποδεικνύει καλύτερη απόδοση προσαρμοσμένη στον κίνδυνο.")
showSortinoRatio = input.bool(true, title="Εμφάνιση Sortino Ratio", tooltip="Ο Δείκτης Sortino είναι μια παραλλαγή του Δείκτη Sharpe που λαμβάνει υπόψη μόνο τον κίνδυνο προς τα κάτω, καθιστώντας τον πιο κατάλληλο για στρατηγικές με αρνητική ασυμμετρία. Ένας Δείκτης Sortino κάτω από 1.0 θεωρείται κακός, ενώ 1.5 ή υψηλότερος είναι αποδεκτός.")
showCAGR = input.bool(true, title="Εμφάνιση CAGR", tooltip="Ο Σύνθετος Ετήσιος Ρυθμός Ανάπτυξης (CAGR) είναι ο ρυθμός με τον οποίο μια επένδυση θα είχε αυξηθεί αν είχε αυξηθεί με σταθερό ρυθμό, ετησίως. Ένας CAGR 7-10% ή υψηλότερος θεωρείται καλός για μια στρατηγική DCA.")
showCalmarRatio = input.bool(true, title="Εμφάνιση Calmar Ratio", tooltip="Ο Δείκτης Calmar είναι ο λόγος της μέσης ετήσιας απόδοσης προς τη μέγιστη πτώση, βοηθώντας στην αξιολόγηση της απόδοσης προσαρμοσμένης στον κίνδυνο σε ασταθείς αγορές. Ένας Δείκτης Calmar 1 ή μεγαλύτερος θεωρείται αποδεκτός, ενώ κάτω από 1 υποδηλώνει ότι η απόδοση δεν αντισταθμίζει επαρκώς τον κίνδυνο.")
showAvgCostBasis = input.bool(true, title="Εμφάνιση Avg Cost Basis", tooltip="Το Μέσο Κόστος Κτήσης αντιπροσωπεύει τη μέση τιμή στην οποία έχει αγοραστεί το περιουσιακό στοιχείο, συμπεριλαμβανομένων των εξόδων συναλλαγών.")

// === Optional Settings for Displaying Metrics ===
showTotalInvested = input.bool(true, title="Εμφάνιση Total Invested", tooltip="Το Συνολικό Επενδυμένο ποσό αντιπροσωπεύει το συνολικό ποσό χρημάτων που επενδύθηκαν στη στρατηγική, συμπεριλαμβανομένων όλων των αγορών που πραγματοποιήθηκαν με την πάροδο του χρόνου.")
showFeesPaid = input.bool(true, title="Εμφάνιση Fees Paid", tooltip="Τα Πληρωμένα Τέλη δείχνουν το συνολικό κόστος από την αγορά περιουσιακών στοιχείων, όπως τέλη ανταλλαγής ή έξοδα συναλλαγών.")
showNetCostPerUnit = input.bool(true, title="Εμφάνιση Net Cost / Units", tooltip="Το Καθαρό Κόστος ανά Μονάδα αντιπροσωπεύει την τιμή ανά μονάδα του περιουσιακού στοιχείου μετά την αφαίρεση των εξόδων.")
showTotalUnits = input.bool(true, title="Εμφάνιση Total Units", tooltip="Οι Συνολικές Μονάδες δείχνουν τον συνολικό αριθμό νομισμάτων ή μονάδων του περιουσιακού στοιχείου που αποκτήθηκαν μέσω της στρατηγικής.")
showCurrentValue = input.bool(true, title="Εμφάνιση Current Value", tooltip="Η Τρέχουσα Αξία εμφανίζει την τρέχουσα αξία των συνολικών μονάδων που κατέχονται, με βάση την τελευταία τιμή του περιουσιακού στοιχείου.")
showProfit = input.bool(true, title="Εμφάνιση Profit", tooltip="Το Κέρδος δείχνει τη διαφορά μεταξύ της συνολικής τρέχουσας αξίας και του συνολικού επενδυμένου ποσού, αντιπροσωπεύοντας το συνολικό κέρδος ή ζημία της στρατηγικής.")
showROI = input.bool(true, title="Εμφάνιση ROI", tooltip="Η Απόδοση Επένδυσης (ROI) είναι το ποσοστό απόδοσης στο συνολικό επενδυμένο ποσό, που δείχνει πόσο κέρδος ή ζημία έχει επιτευχθεί σε σχέση με την αρχική επένδυση.")
showMaxDrawdown = input.bool(true, title="Εμφάνιση Max Drawdown", tooltip="Η Μέγιστη Πτώση μετρά τη μεγαλύτερη μείωση από την κορυφή στην κατώτατη τιμή κατά τη διάρκεια της λειτουργίας της στρατηγικής, δείχνοντας τον μέγιστο κίνδυνο που αναλήφθηκε στην χειρότερη περίοδο.")

// === TABLE ===
var table statsTable = table.new(position.top_right, 3, 14, border_width=2)

if bar_index % 10 == 0 or na(bar_index)
    // Table Headers
    table.cell(statsTable, 0, 0, "📊 Δείκτης", text_color=color_white, bgcolor=color_navy, text_halign=text.align_center)
    table.cell(statsTable, 1, 0, "Αποτέλεσμα", text_color=color_white, bgcolor=color_navy, text_halign=text.align_center)
    
    // Total Invested
    if showTotalInvested
        table.cell(statsTable, 0, 1, "💵 Συνολική Επένδυση", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 1, str.tostring(totalInvested, format.mintick), text_color=color_white, bgcolor=color_gray)

    // Fees Paid
    if showFeesPaid
        table.cell(statsTable, 0, 2, "💸 Πληρωμένα Τέλη", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 2, str.tostring(totalFeesPaid, format.mintick), text_color=color_white, bgcolor=color_gray)

    // Net Cost for Units
    if showNetCostPerUnit
        table.cell(statsTable, 0, 3, "💲 Καθαρό Κόστος / Μονάδες", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 3, str.tostring(totalInvested - totalFeesPaid, format.mintick), text_color=color_white, bgcolor=color_gray)

    // Total Units
    if showTotalUnits
        table.cell(statsTable, 0, 4, "🪙 Συνολικές Μονάδες", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 4, str.tostring(totalUnits, format.mintick), text_color=color_white, bgcolor=color_gray)

    // Current Value
    if showCurrentValue
        table.cell(statsTable, 0, 5, "📈 Τρέχουσα Αξία", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 5, str.tostring(currentValue, format.mintick), text_color=color_white, bgcolor=color_gray)

    // Profit
    if showProfit
        table.cell(statsTable, 0, 6, "💰 Κέρδος", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 6, str.tostring(profit, format.mintick), text_color=color_white, bgcolor=color_gray)

    // ROI
    if showROI
        table.cell(statsTable, 0, 7, "📊 Απόδοση Επένδυσης (ROI)", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 7, str.tostring(roi, "#.##") + "%", text_color=color_white, bgcolor=color_gray)

    // Max Drawdown
    if showMaxDrawdown
        table.cell(statsTable, 0, 8, "📉 Μέγιστη Πτώση", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 8, str.tostring(maxDrawdown, "#.##") + "%", text_color=color_white, bgcolor=color_gray)

    // Only show Sharpe Ratio if enabled
    if showSharpeRatio
        table.cell(statsTable, 0, 9, "📊 Δείκτης Sharpe", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 9, str.tostring(sharpeRatio, "#.##"), text_color=color_white, bgcolor=color_gray)

    // Only show Sortino Ratio if enabled
    if showSortinoRatio
        table.cell(statsTable, 0, 10, "📊 Δείκτης Sortino", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 10, str.tostring(sortinoRatio, "#.##"), text_color=color_white, bgcolor=color_gray)

    // Only show CAGR if enabled
    if showCAGR
        table.cell(statsTable, 0, 11, "📈 CAGR", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 11, str.tostring(cagr * 100, "#.##") + "%", text_color=color_white, bgcolor=color_gray)
    
    // Only show Calmar Ratio if enabled
    if showCalmarRatio
        table.cell(statsTable, 0, 12, "📊 Δείκτης Calmar", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 12, str.tostring(calmarRatio, "#.##"), text_color=color_white, bgcolor=color_gray)

    // Only show Avg Cost Basis if enabled
    if showAvgCostBasis
        table.cell(statsTable, 0, 13, "📈 Μέσο Κόστος Κτήσης", text_color=color_white, bgcolor=color_gray)
        table.cell(statsTable, 1, 13, str.tostring(avgCostBasis, format.mintick), text_color=color_white, bgcolor=color_gray)
